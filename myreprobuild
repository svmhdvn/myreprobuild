#!/bin/sh

set -eu

latest_release_version=14.3-RELEASE

_usage() {
  cat <<EOF
usage:
  myreprobuild setup
  myreprobuild bulk <-a | -f pkglist.txt | origin...>
EOF
  exit 64 # EX_USAGE
}

setup_system() {
  doas poudriere jail -c -j rb1 -v "${latest_release_version}" || true
  doas poudriere jail -u -j rb1 -v "${latest_release_version}"

  doas poudriere jail -c -j rb2 -v "${latest_release_version}" || true
  doas poudriere jail -u -j rb2 -v "${latest_release_version}"
}

# TODO determine whether we want:
# * 'bulk -C' (clean only selected packages), OR
# * 'bulk -c' (clean all packages)
bulk_check_reproducibility() {
  #_tmpdir="$(mktemp -d)"
  _tmpdir="${HOME}/.cache/myreprobuildtest"
  rm -rf "${_tmpdir:?}"/*
  mkdir -p \
    "${_tmpdir}/pkgs/left" \
    "${_tmpdir}/pkgs/right" \
    "${_tmpdir}/logs"
  tmux new-session -d -c "${PWD}" -s myreprobuild -n bulk \
    "doas poudriere bulk -cNN -j rb1 $* 2>&1 | tee '${_tmpdir}/logs/rb1.log'"
  sleep 2 # put at least two seconds between the two runs to check for timestamp reproducibility
  tmux split-window -c "${PWD}" -t myreprobuild:bulk \
    "doas poudriere bulk -cNN -j rb2 $* 2>&1 | tee '${_tmpdir}/logs/rb2.log'"
  env -u TMUX tmux attach-session -t myreprobuild > /dev/null

  (
    cd /usr/local/poudriere/data/packages/rb1-default/.building/All && \
    ls -1 /usr/local/poudriere/data/packages/rb1-default/.building/logs/logs/built | \
      sed 's/\.log$/.pkg/' | \
      xargs -J% cp % "${_tmpdir}/pkgs/left"
  )
  (
    cd /usr/local/poudriere/data/packages/rb2-default/.building/All && \
    ls -1 /usr/local/poudriere/data/packages/rb2-default/.building/logs/logs/built | \
      sed 's/\.log$/.pkg/' | \
      xargs -J% cp % "${_tmpdir}/pkgs/right"
  )
  cp -RL \
    /usr/local/poudriere/data/packages/rb1-default/.building/logs/logs/built \
    "${_tmpdir}/logs/left"
  cp -RL \
    /usr/local/poudriere/data/packages/rb2-default/.building/logs/logs/built \
    "${_tmpdir}/logs/right"

  echo TAP version 14 | tee "${_tmpdir}/results.tap" >&2
  (
    cd "${_tmpdir}/pkgs/left"
    _i=0
    for _p in *.pkg; do
      _i=$((_i + 1))
      cmp -s "${_p}" "../right/${_p}" || printf 'not ' | tee -a "${_tmpdir}/results.tap" >&2
      printf 'ok %d - %s\n' "${_i}" "${_p}" | tee -a "${_tmpdir}/results.tap" >&2
    done
    printf '1..%d\n' "${_i}" | tee -a "${_tmpdir}/results.tap" >&2
  )

  ls -alh "${_tmpdir}"
}

#realpath="$(realpath "$0")"
#top="$(dirname "${realpath}")"
#src="${HOME}/src/freebsd-src"
#j="${J:-$(nproc)}"

cmd="$1"
shift
case "${cmd}" in
  setup) setup_system ;;
  bulk) bulk_check_reproducibility "$@" ;;
  *)
      echo "ERROR: unrecognized command '${cmd}'" >&2
      _usage >&2
esac
